let n =
  '{"tryEntries":[{"tryLoc":"root","completion":{"type":"normal"}}],"prev":2,"next":2,"_sent":{"conf":{"wordPattern":"/(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\`\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\\'\\\\\\"\\\\,\\\\.\\\\<\\\\>\\\\/\\\\?\\\\s]+)/g","comments":{"lineComment":"//","blockComment":["/*","*/"]},"brackets":[["{","}"],["[","]"],["(",")"]],"onEnterRules":[{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","afterText":"/^\\\\s*\\\\*\\\\/$/","action":{"indentAction":2,"appendText":" * "}},{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","action":{"indentAction":0,"appendText":" * "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*(\\\\ ([^\\\\*]|\\\\*(?!\\\\/))*)?$/","action":{"indentAction":0,"appendText":"* "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*\\\\/\\\\s*$/","action":{"indentAction":0,"removeText":1}}],"autoClosingPairs":[{"open":"{","close":"}"},{"open":"[","close":"]"},{"open":"(","close":")"},{"open":"\\"","close":"\\"","notIn":["string"]},{"open":"\'","close":"\'","notIn":["string","comment"]},{"open":"`","close":"`","notIn":["string","comment"]},{"open":"/**","close":" */","notIn":["string"]}],"folding":{"markers":{"start":"/^\\\\s*\\\\/\\\\/\\\\s*#?region\\\\b/","end":"/^\\\\s*\\\\/\\\\/\\\\s*#?endregion\\\\b/"}}},"language":{"defaultToken":"invalid","tokenPostfix":".js","keywords":["abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","ABORT","ABSOLUTE","ACTION","ADA","ADD","AFTER","ALL","ALLOCATE","ALTER","ALWAYS","ANALYZE","AND","ANY","ARE","AS","ASC","ASSERTION","AT","ATTACH","AUTHORIZATION","AUTOINCREMENT","AVG","BACKUP","BEFORE","BEGIN","BETWEEN","BIT","BIT_LENGTH","BOTH","BREAK","BROWSE","BULK","BY","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLLATION","COLUMN","COMMIT","COMPUTE","CONFLICT","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CORRESPONDING","COUNT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATE","DAY","DBCC","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DETACH","DIAGNOSTICS","DISCONNECT","DISK","DISTINCT","DISTRIBUTED","DO","DOMAIN","DOUBLE","DROP","DUMP","EACH","ELSE","END","END-EXEC","ERRLVL","ESCAPE","EXCEPT","EXCEPTION","EXCLUDE","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTERNAL","EXTRACT","FAIL","FALSE","FETCH","FILE","FILLFACTOR","FILTER","FIRST","FLOAT","FOLLOWING","FOR","FOREIGN","FORTRAN","FOUND","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GENERATED","GET","GLOB","GLOBAL","GO","GOTO","GRANT","GROUP","GROUPS","HAVING","HOLDLOCK","HOUR","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IGNORE","IMMEDIATE","IN","INCLUDE","INDEX","INDEXED","INDICATOR","INITIALLY","INNER","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","ISNULL","ISOLATION","JOIN","KEY","KILL","LANGUAGE","LAST","LEADING","LEFT","LEVEL","LIKE","LIMIT","LINENO","LOAD","LOCAL","LOWER","MATCH","MATERIALIZED","MAX","MERGE","MIN","MINUTE","MODULE","MONTH","NAMES","NATIONAL","NATURAL","NCHAR","NEXT","NO","NOCHECK","NONCLUSTERED","NONE","NOT","NOTHING","NOTNULL","NULL","NULLIF","NULLS","NUMERIC","OCTET_LENGTH","OF","OFF","OFFSET","OFFSETS","ON","ONLY","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OTHERS","OUTER","OUTPUT","OVER","OVERLAPS","PAD","PARTIAL","PARTITION","PASCAL","PERCENT","PIVOT","PLAN","POSITION","PRAGMA","PRECEDING","PRECISION","PREPARE","PRESERVE","PRIMARY","PRINT","PRIOR","PRIVILEGES","PROC","PROCEDURE","PUBLIC","QUERY","RAISE","RAISERROR","RANGE","READ","READTEXT","REAL","RECONFIGURE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELATIVE","RELEASE","RENAME","REPLACE","REPLICATION","RESTORE","RESTRICT","RETURN","RETURNING","REVERT","REVOKE","RIGHT","ROLLBACK","ROW","ROWCOUNT","ROWGUIDCOL","ROWS","RULE","SAVE","SAVEPOINT","SCHEMA","SCROLL","SECOND","SECTION","SECURITYAUDIT","SELECT","PAGING","Dwsy","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION","SESSION_USER","SET","SETUSER","SHUTDOWN","SIZE","SMALLINT","SOME","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","STATISTICS","SUBSTRING","SUM","SYSTEM_USER","TABLE","TABLESAMPLE","TEMP","TEMPORARY","TEXTSIZE","THEN","TIES","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TOP","TRAILING","TRAN","TRANSACTION","TRANSLATE","TRANSLATION","TRIGGER","TRIM","TRUE","TRUNCATE","TRY_CONVERT","TSEQUAL","UNBOUNDED","UNION","UNIQUE","UNKNOWN","UNPIVOT","UPDATE","UPDATETEXT","UPPER","USAGE","USE","USER","USING","VACUUM","VALUE","VALUES","VARCHAR","VARYING","VIEW","VIRTUAL","WAITFOR","WHEN","WHENEVER","WHERE","WHILE","WINDOW","WITH","WITHIN GROUP","WITHOUT","WORK","WRITE","WRITETEXT","YEAR","ZONE","abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","abort","absolute","action","ada","add","after","all","allocate","alter","always","analyze","and","any","are","as","asc","assertion","at","attach","authorization","autoincrement","avg","backup","before","begin","between","bit","bit_length","both","break","browse","bulk","by","cascade","cascaded","case","cast","catalog","char","character","character_length","char_length","check","checkpoint","close","clustered","coalesce","collate","collation","column","commit","compute","conflict","connect","connection","constraint","constraints","contains","containstable","continue","convert","corresponding","count","create","cross","current","current_date","current_time","current_timestamp","current_user","cursor","database","date","day","dbcc","deallocate","dec","decimal","declare","default","deferrable","deferred","delete","deny","desc","describe","descriptor","detach","diagnostics","disconnect","disk","distinct","distributed","do","domain","double","drop","dump","each","else","end","end-exec","errlvl","escape","except","exception","exclude","exclusive","exec","execute","exists","exit","explain","external","extract","fail","false","fetch","file","fillfactor","filter","first","float","following","for","foreign","fortran","found","freetext","freetexttable","from","full","function","generated","get","glob","global","go","goto","grant","group","groups","having","holdlock","hour","identity","identitycol","identity_insert","if","ignore","immediate","in","include","index","indexed","indicator","initially","inner","input","insensitive","insert","instead","int","integer","intersect","interval","into","is","isnull","isolation","join","key","kill","language","last","leading","left","level","like","limit","lineno","load","local","lower","match","materialized","max","merge","min","minute","module","month","names","national","natural","nchar","next","no","nocheck","nonclustered","none","not","nothing","notnull","null","nullif","nulls","numeric","octet_length","of","off","offset","offsets","on","only","open","opendatasource","openquery","openrowset","openxml","option","or","order","others","outer","output","over","overlaps","pad","partial","partition","pascal","percent","pivot","plan","position","pragma","preceding","precision","prepare","preserve","primary","print","prior","privileges","proc","procedure","public","query","raise","raiserror","range","read","readtext","real","reconfigure","recursive","references","regexp","reindex","relative","release","rename","replace","replication","restore","restrict","return","returning","revert","revoke","right","rollback","row","rowcount","rowguidcol","rows","rule","save","savepoint","schema","scroll","second","section","securityaudit","select","norule","paging","semantickeyphrasetable","semanticsimilaritydetailstable","semanticsimilaritytable","session","session_user","set","setuser","shutdown","size","smallint","some","space","sql","sqlca","sqlcode","sqlerror","sqlstate","sqlwarning","statistics","substring","sum","system_user","table","tablesample","temp","temporary","textsize","then","ties","time","timestamp","timezone_hour","timezone_minute","to","top","trailing","tran","transaction","translate","translation","trigger","trim","true","truncate","try_convert","tsequal","unbounded","union","unique","unknown","unpivot","update","updatetext","upper","usage","use","user","using","vacuum","value","values","varchar","varying","view","virtual","waitfor","when","whenever","where","while","window","with","within group","without","work","write","writetext","year","zone"],"typeKeywords":[],"operators":["<=",">=","==","!=","===","!==","=>","+","-","**","*","/","%","++","--","<<","</",">>",">>>","&","|","^","!","~","&&","||","??","?",":","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=","@","ALL","AND","ANY","BETWEEN","EXISTS","IN","LIKE","NOT","OR","SOME","EXCEPT","INTERSECT","UNION","APPLY","CROSS","FULL","INNER","JOIN","LEFT","OUTER","RIGHT","CONTAINS","FREETEXT","IS","NULL","PIVOT","UNPIVOT","MATCHED"],"symbols":"/[=><!~?:&|+\\\\-*\\\\/\\\\^%]+/","escapes":"/\\\\\\\\(?:[abfnrtv\\\\\\\\\\"\']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/","digits":"/\\\\d+(_+\\\\d+)*/","octaldigits":"/[0-7]+(_+[0-7]+)*/","binarydigits":"/[0-1]+(_+[0-1]+)*/","hexdigits":"/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/","regexpctl":"/[(){}\\\\[\\\\]\\\\$\\\\^|\\\\-*+?\\\\.]/","regexpesc":"/\\\\\\\\(?:[bBdDfnrstvwWn0\\\\\\\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/","tokenizer":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"builtinFunctions":["AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","SUM","STDEV","STDEVP","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","COLLATE","COLLATIONPROPERTY","TERTIARY_WEIGHTS","FEDERATION_FILTERING_VALUE","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","CURRENT_TIMESTAMP","DATEADD","DATEDIFF","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","CHOOSE","COALESCE","IIF","NULLIF","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASE_PRINCIPAL_ID","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STUFF","SUBSTRING","UNICODE","UPPER","BINARY_CHECKSUM","CHECKSUM","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","ERROR_LINE","ERROR_NUMBER","ERROR_MESSAGE","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GETANSINULL","GET_FILESTREAM_TRANSACTION_CONTEXT","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","XACT_STATE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","CHANGETABLE","CHANGE_TRACKING_CONTEXT","CHANGE_TRACKING_CURRENT_VERSION","CHANGE_TRACKING_IS_COLUMN_IN_MASK","CHANGE_TRACKING_MIN_VALID_VERSION","CONTAINSTABLE","FREETEXTTABLE","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","FILETABLEROOTPATH","GETFILENAMESPACEPATH","GETPATHLOCATOR","PATHNAME","GET_TRANSMISSION_STATUS"],"builtinVariables":["@@DATEFIRST","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","@@CURSOR_ROWS","@@FETCH_STATUS","@@DATEFIRST","@@PROCID","@@ERROR","@@IDENTITY","@@ROWCOUNT","@@TRANCOUNT","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACKET_ERRORS","@@PACK_RECEIVED","@@PACK_SENT","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE"],"pseudoColumns":["$ACTION","$IDENTITY","$ROWGUID","$PARTITION"],"languageId":"flycode","includeLF":false,"ignoreCase":false,"unicode":false,"noThrow":false,"usesEmbedded":false,"stateNames":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"brackets":[{"open":"{","close":"}","token":"delimiter.curly"},{"open":"[","close":"]","token":"delimiter.square"},{"open":"(","close":")","token":"delimiter.parenthesis"},{"open":"<","close":">","token":"delimiter.angle"}]}},"sent":{"conf":{"wordPattern":"/(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\`\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\\'\\\\\\"\\\\,\\\\.\\\\<\\\\>\\\\/\\\\?\\\\s]+)/g","comments":{"lineComment":"//","blockComment":["/*","*/"]},"brackets":[["{","}"],["[","]"],["(",")"]],"onEnterRules":[{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","afterText":"/^\\\\s*\\\\*\\\\/$/","action":{"indentAction":2,"appendText":" * "}},{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","action":{"indentAction":0,"appendText":" * "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*(\\\\ ([^\\\\*]|\\\\*(?!\\\\/))*)?$/","action":{"indentAction":0,"appendText":"* "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*\\\\/\\\\s*$/","action":{"indentAction":0,"removeText":1}}],"autoClosingPairs":[{"open":"{","close":"}"},{"open":"[","close":"]"},{"open":"(","close":")"},{"open":"\\"","close":"\\"","notIn":["string"]},{"open":"\'","close":"\'","notIn":["string","comment"]},{"open":"`","close":"`","notIn":["string","comment"]},{"open":"/**","close":" */","notIn":["string"]}],"folding":{"markers":{"start":"/^\\\\s*\\\\/\\\\/\\\\s*#?region\\\\b/","end":"/^\\\\s*\\\\/\\\\/\\\\s*#?endregion\\\\b/"}}},"language":{"defaultToken":"invalid","tokenPostfix":".js","keywords":["abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","ABORT","ABSOLUTE","ACTION","ADA","ADD","AFTER","ALL","ALLOCATE","ALTER","ALWAYS","ANALYZE","AND","ANY","ARE","AS","ASC","ASSERTION","AT","ATTACH","AUTHORIZATION","AUTOINCREMENT","AVG","BACKUP","BEFORE","BEGIN","BETWEEN","BIT","BIT_LENGTH","BOTH","BREAK","BROWSE","BULK","BY","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLLATION","COLUMN","COMMIT","COMPUTE","CONFLICT","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CORRESPONDING","COUNT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATE","DAY","DBCC","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DETACH","DIAGNOSTICS","DISCONNECT","DISK","DISTINCT","DISTRIBUTED","DO","DOMAIN","DOUBLE","DROP","DUMP","EACH","ELSE","END","END-EXEC","ERRLVL","ESCAPE","EXCEPT","EXCEPTION","EXCLUDE","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTERNAL","EXTRACT","FAIL","FALSE","FETCH","FILE","FILLFACTOR","FILTER","FIRST","FLOAT","FOLLOWING","FOR","FOREIGN","FORTRAN","FOUND","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GENERATED","GET","GLOB","GLOBAL","GO","GOTO","GRANT","GROUP","GROUPS","HAVING","HOLDLOCK","HOUR","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IGNORE","IMMEDIATE","IN","INCLUDE","INDEX","INDEXED","INDICATOR","INITIALLY","INNER","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","ISNULL","ISOLATION","JOIN","KEY","KILL","LANGUAGE","LAST","LEADING","LEFT","LEVEL","LIKE","LIMIT","LINENO","LOAD","LOCAL","LOWER","MATCH","MATERIALIZED","MAX","MERGE","MIN","MINUTE","MODULE","MONTH","NAMES","NATIONAL","NATURAL","NCHAR","NEXT","NO","NOCHECK","NONCLUSTERED","NONE","NOT","NOTHING","NOTNULL","NULL","NULLIF","NULLS","NUMERIC","OCTET_LENGTH","OF","OFF","OFFSET","OFFSETS","ON","ONLY","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OTHERS","OUTER","OUTPUT","OVER","OVERLAPS","PAD","PARTIAL","PARTITION","PASCAL","PERCENT","PIVOT","PLAN","POSITION","PRAGMA","PRECEDING","PRECISION","PREPARE","PRESERVE","PRIMARY","PRINT","PRIOR","PRIVILEGES","PROC","PROCEDURE","PUBLIC","QUERY","RAISE","RAISERROR","RANGE","READ","READTEXT","REAL","RECONFIGURE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELATIVE","RELEASE","RENAME","REPLACE","REPLICATION","RESTORE","RESTRICT","RETURN","RETURNING","REVERT","REVOKE","RIGHT","ROLLBACK","ROW","ROWCOUNT","ROWGUIDCOL","ROWS","RULE","SAVE","SAVEPOINT","SCHEMA","SCROLL","SECOND","SECTION","SECURITYAUDIT","SELECT","PAGING","Dwsy","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION","SESSION_USER","SET","SETUSER","SHUTDOWN","SIZE","SMALLINT","SOME","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","STATISTICS","SUBSTRING","SUM","SYSTEM_USER","TABLE","TABLESAMPLE","TEMP","TEMPORARY","TEXTSIZE","THEN","TIES","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TOP","TRAILING","TRAN","TRANSACTION","TRANSLATE","TRANSLATION","TRIGGER","TRIM","TRUE","TRUNCATE","TRY_CONVERT","TSEQUAL","UNBOUNDED","UNION","UNIQUE","UNKNOWN","UNPIVOT","UPDATE","UPDATETEXT","UPPER","USAGE","USE","USER","USING","VACUUM","VALUE","VALUES","VARCHAR","VARYING","VIEW","VIRTUAL","WAITFOR","WHEN","WHENEVER","WHERE","WHILE","WINDOW","WITH","WITHIN GROUP","WITHOUT","WORK","WRITE","WRITETEXT","YEAR","ZONE","abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","abort","absolute","action","ada","add","after","all","allocate","alter","always","analyze","and","any","are","as","asc","assertion","at","attach","authorization","autoincrement","avg","backup","before","begin","between","bit","bit_length","both","break","browse","bulk","by","cascade","cascaded","case","cast","catalog","char","character","character_length","char_length","check","checkpoint","close","clustered","coalesce","collate","collation","column","commit","compute","conflict","connect","connection","constraint","constraints","contains","containstable","continue","convert","corresponding","count","create","cross","current","current_date","current_time","current_timestamp","current_user","cursor","database","date","day","dbcc","deallocate","dec","decimal","declare","default","deferrable","deferred","delete","deny","desc","describe","descriptor","detach","diagnostics","disconnect","disk","distinct","distributed","do","domain","double","drop","dump","each","else","end","end-exec","errlvl","escape","except","exception","exclude","exclusive","exec","execute","exists","exit","explain","external","extract","fail","false","fetch","file","fillfactor","filter","first","float","following","for","foreign","fortran","found","freetext","freetexttable","from","full","function","generated","get","glob","global","go","goto","grant","group","groups","having","holdlock","hour","identity","identitycol","identity_insert","if","ignore","immediate","in","include","index","indexed","indicator","initially","inner","input","insensitive","insert","instead","int","integer","intersect","interval","into","is","isnull","isolation","join","key","kill","language","last","leading","left","level","like","limit","lineno","load","local","lower","match","materialized","max","merge","min","minute","module","month","names","national","natural","nchar","next","no","nocheck","nonclustered","none","not","nothing","notnull","null","nullif","nulls","numeric","octet_length","of","off","offset","offsets","on","only","open","opendatasource","openquery","openrowset","openxml","option","or","order","others","outer","output","over","overlaps","pad","partial","partition","pascal","percent","pivot","plan","position","pragma","preceding","precision","prepare","preserve","primary","print","prior","privileges","proc","procedure","public","query","raise","raiserror","range","read","readtext","real","reconfigure","recursive","references","regexp","reindex","relative","release","rename","replace","replication","restore","restrict","return","returning","revert","revoke","right","rollback","row","rowcount","rowguidcol","rows","rule","save","savepoint","schema","scroll","second","section","securityaudit","select","norule","paging","semantickeyphrasetable","semanticsimilaritydetailstable","semanticsimilaritytable","session","session_user","set","setuser","shutdown","size","smallint","some","space","sql","sqlca","sqlcode","sqlerror","sqlstate","sqlwarning","statistics","substring","sum","system_user","table","tablesample","temp","temporary","textsize","then","ties","time","timestamp","timezone_hour","timezone_minute","to","top","trailing","tran","transaction","translate","translation","trigger","trim","true","truncate","try_convert","tsequal","unbounded","union","unique","unknown","unpivot","update","updatetext","upper","usage","use","user","using","vacuum","value","values","varchar","varying","view","virtual","waitfor","when","whenever","where","while","window","with","within group","without","work","write","writetext","year","zone"],"typeKeywords":[],"operators":["<=",">=","==","!=","===","!==","=>","+","-","**","*","/","%","++","--","<<","</",">>",">>>","&","|","^","!","~","&&","||","??","?",":","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=","@","ALL","AND","ANY","BETWEEN","EXISTS","IN","LIKE","NOT","OR","SOME","EXCEPT","INTERSECT","UNION","APPLY","CROSS","FULL","INNER","JOIN","LEFT","OUTER","RIGHT","CONTAINS","FREETEXT","IS","NULL","PIVOT","UNPIVOT","MATCHED"],"symbols":"/[=><!~?:&|+\\\\-*\\\\/\\\\^%]+/","escapes":"/\\\\\\\\(?:[abfnrtv\\\\\\\\\\"\']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/","digits":"/\\\\d+(_+\\\\d+)*/","octaldigits":"/[0-7]+(_+[0-7]+)*/","binarydigits":"/[0-1]+(_+[0-1]+)*/","hexdigits":"/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/","regexpctl":"/[(){}\\\\[\\\\]\\\\$\\\\^|\\\\-*+?\\\\.]/","regexpesc":"/\\\\\\\\(?:[bBdDfnrstvwWn0\\\\\\\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/","tokenizer":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"builtinFunctions":["AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","SUM","STDEV","STDEVP","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","COLLATE","COLLATIONPROPERTY","TERTIARY_WEIGHTS","FEDERATION_FILTERING_VALUE","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","CURRENT_TIMESTAMP","DATEADD","DATEDIFF","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","CHOOSE","COALESCE","IIF","NULLIF","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASE_PRINCIPAL_ID","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STUFF","SUBSTRING","UNICODE","UPPER","BINARY_CHECKSUM","CHECKSUM","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","ERROR_LINE","ERROR_NUMBER","ERROR_MESSAGE","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GETANSINULL","GET_FILESTREAM_TRANSACTION_CONTEXT","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","XACT_STATE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","CHANGETABLE","CHANGE_TRACKING_CONTEXT","CHANGE_TRACKING_CURRENT_VERSION","CHANGE_TRACKING_IS_COLUMN_IN_MASK","CHANGE_TRACKING_MIN_VALID_VERSION","CONTAINSTABLE","FREETEXTTABLE","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","FILETABLEROOTPATH","GETFILENAMESPACEPATH","GETPATHLOCATOR","PATHNAME","GET_TRANSMISSION_STATUS"],"builtinVariables":["@@DATEFIRST","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","@@CURSOR_ROWS","@@FETCH_STATUS","@@DATEFIRST","@@PROCID","@@ERROR","@@IDENTITY","@@ROWCOUNT","@@TRANCOUNT","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACKET_ERRORS","@@PACK_RECEIVED","@@PACK_SENT","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE"],"pseudoColumns":["$ACTION","$IDENTITY","$ROWGUID","$PARTITION"],"languageId":"flycode","includeLF":false,"ignoreCase":false,"unicode":false,"noThrow":false,"usesEmbedded":false,"stateNames":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"brackets":[{"open":"{","close":"}","token":"delimiter.curly"},{"open":"[","close":"]","token":"delimiter.square"},{"open":"(","close":")","token":"delimiter.parenthesis"},{"open":"<","close":">","token":"delimiter.angle"}]}},"done":true,"delegate":null,"method":"next","arg":{"conf":{"wordPattern":"/(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\`\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\\'\\\\\\"\\\\,\\\\.\\\\<\\\\>\\\\/\\\\?\\\\s]+)/g","comments":{"lineComment":"//","blockComment":["/*","*/"]},"brackets":[["{","}"],["[","]"],["(",")"]],"onEnterRules":[{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","afterText":"/^\\\\s*\\\\*\\\\/$/","action":{"indentAction":2,"appendText":" * "}},{"beforeText":"/^\\\\s*\\\\/\\\\*\\\\*(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$/","action":{"indentAction":0,"appendText":" * "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*(\\\\ ([^\\\\*]|\\\\*(?!\\\\/))*)?$/","action":{"indentAction":0,"appendText":"* "}},{"beforeText":"/^(\\\\t|(\\\\ \\\\ ))*\\\\ \\\\*\\\\/\\\\s*$/","action":{"indentAction":0,"removeText":1}}],"autoClosingPairs":[{"open":"{","close":"}"},{"open":"[","close":"]"},{"open":"(","close":")"},{"open":"\\"","close":"\\"","notIn":["string"]},{"open":"\'","close":"\'","notIn":["string","comment"]},{"open":"`","close":"`","notIn":["string","comment"]},{"open":"/**","close":" */","notIn":["string"]}],"folding":{"markers":{"start":"/^\\\\s*\\\\/\\\\/\\\\s*#?region\\\\b/","end":"/^\\\\s*\\\\/\\\\/\\\\s*#?endregion\\\\b/"}}},"language":{"defaultToken":"invalid","tokenPostfix":".js","keywords":["abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","ABORT","ABSOLUTE","ACTION","ADA","ADD","AFTER","ALL","ALLOCATE","ALTER","ALWAYS","ANALYZE","AND","ANY","ARE","AS","ASC","ASSERTION","AT","ATTACH","AUTHORIZATION","AUTOINCREMENT","AVG","BACKUP","BEFORE","BEGIN","BETWEEN","BIT","BIT_LENGTH","BOTH","BREAK","BROWSE","BULK","BY","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLLATION","COLUMN","COMMIT","COMPUTE","CONFLICT","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CORRESPONDING","COUNT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATE","DAY","DBCC","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DETACH","DIAGNOSTICS","DISCONNECT","DISK","DISTINCT","DISTRIBUTED","DO","DOMAIN","DOUBLE","DROP","DUMP","EACH","ELSE","END","END-EXEC","ERRLVL","ESCAPE","EXCEPT","EXCEPTION","EXCLUDE","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTERNAL","EXTRACT","FAIL","FALSE","FETCH","FILE","FILLFACTOR","FILTER","FIRST","FLOAT","FOLLOWING","FOR","FOREIGN","FORTRAN","FOUND","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GENERATED","GET","GLOB","GLOBAL","GO","GOTO","GRANT","GROUP","GROUPS","HAVING","HOLDLOCK","HOUR","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IGNORE","IMMEDIATE","IN","INCLUDE","INDEX","INDEXED","INDICATOR","INITIALLY","INNER","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","ISNULL","ISOLATION","JOIN","KEY","KILL","LANGUAGE","LAST","LEADING","LEFT","LEVEL","LIKE","LIMIT","LINENO","LOAD","LOCAL","LOWER","MATCH","MATERIALIZED","MAX","MERGE","MIN","MINUTE","MODULE","MONTH","NAMES","NATIONAL","NATURAL","NCHAR","NEXT","NO","NOCHECK","NONCLUSTERED","NONE","NOT","NOTHING","NOTNULL","NULL","NULLIF","NULLS","NUMERIC","OCTET_LENGTH","OF","OFF","OFFSET","OFFSETS","ON","ONLY","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OTHERS","OUTER","OUTPUT","OVER","OVERLAPS","PAD","PARTIAL","PARTITION","PASCAL","PERCENT","PIVOT","PLAN","POSITION","PRAGMA","PRECEDING","PRECISION","PREPARE","PRESERVE","PRIMARY","PRINT","PRIOR","PRIVILEGES","PROC","PROCEDURE","PUBLIC","QUERY","RAISE","RAISERROR","RANGE","READ","READTEXT","REAL","RECONFIGURE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELATIVE","RELEASE","RENAME","REPLACE","REPLICATION","RESTORE","RESTRICT","RETURN","RETURNING","REVERT","REVOKE","RIGHT","ROLLBACK","ROW","ROWCOUNT","ROWGUIDCOL","ROWS","RULE","SAVE","SAVEPOINT","SCHEMA","SCROLL","SECOND","SECTION","SECURITYAUDIT","SELECT","PAGING","Dwsy","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION","SESSION_USER","SET","SETUSER","SHUTDOWN","SIZE","SMALLINT","SOME","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","STATISTICS","SUBSTRING","SUM","SYSTEM_USER","TABLE","TABLESAMPLE","TEMP","TEMPORARY","TEXTSIZE","THEN","TIES","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TOP","TRAILING","TRAN","TRANSACTION","TRANSLATE","TRANSLATION","TRIGGER","TRIM","TRUE","TRUNCATE","TRY_CONVERT","TSEQUAL","UNBOUNDED","UNION","UNIQUE","UNKNOWN","UNPIVOT","UPDATE","UPDATETEXT","UPPER","USAGE","USE","USER","USING","VACUUM","VALUE","VALUES","VARCHAR","VARYING","VIEW","VIRTUAL","WAITFOR","WHEN","WHENEVER","WHERE","WHILE","WINDOW","WITH","WITHIN GROUP","WITHOUT","WORK","WRITE","WRITETEXT","YEAR","ZONE","abstract","any","as","asserts","bigint","boolean","break","case","catch","class","continue","const","constructor","//debugger","declare","default","delete","do","else","enum","export","extends","false","finally","for","from","function","get","if","implements","import","in","infer","instanceof","interface","is","keyof","let","module","namespace","never","new","null","number","object","out","package","private","protected","public","override","readonly","require","global","return","satisfies","set","static","string","super","switch","symbol","this","throw","true","try","type","typeof","undefined","unique","unknown","var","void","while","with","yield","async","await","of","abort","absolute","action","ada","add","after","all","allocate","alter","always","analyze","and","any","are","as","asc","assertion","at","attach","authorization","autoincrement","avg","backup","before","begin","between","bit","bit_length","both","break","browse","bulk","by","cascade","cascaded","case","cast","catalog","char","character","character_length","char_length","check","checkpoint","close","clustered","coalesce","collate","collation","column","commit","compute","conflict","connect","connection","constraint","constraints","contains","containstable","continue","convert","corresponding","count","create","cross","current","current_date","current_time","current_timestamp","current_user","cursor","database","date","day","dbcc","deallocate","dec","decimal","declare","default","deferrable","deferred","delete","deny","desc","describe","descriptor","detach","diagnostics","disconnect","disk","distinct","distributed","do","domain","double","drop","dump","each","else","end","end-exec","errlvl","escape","except","exception","exclude","exclusive","exec","execute","exists","exit","explain","external","extract","fail","false","fetch","file","fillfactor","filter","first","float","following","for","foreign","fortran","found","freetext","freetexttable","from","full","function","generated","get","glob","global","go","goto","grant","group","groups","having","holdlock","hour","identity","identitycol","identity_insert","if","ignore","immediate","in","include","index","indexed","indicator","initially","inner","input","insensitive","insert","instead","int","integer","intersect","interval","into","is","isnull","isolation","join","key","kill","language","last","leading","left","level","like","limit","lineno","load","local","lower","match","materialized","max","merge","min","minute","module","month","names","national","natural","nchar","next","no","nocheck","nonclustered","none","not","nothing","notnull","null","nullif","nulls","numeric","octet_length","of","off","offset","offsets","on","only","open","opendatasource","openquery","openrowset","openxml","option","or","order","others","outer","output","over","overlaps","pad","partial","partition","pascal","percent","pivot","plan","position","pragma","preceding","precision","prepare","preserve","primary","print","prior","privileges","proc","procedure","public","query","raise","raiserror","range","read","readtext","real","reconfigure","recursive","references","regexp","reindex","relative","release","rename","replace","replication","restore","restrict","return","returning","revert","revoke","right","rollback","row","rowcount","rowguidcol","rows","rule","save","savepoint","schema","scroll","second","section","securityaudit","select","norule","paging","semantickeyphrasetable","semanticsimilaritydetailstable","semanticsimilaritytable","session","session_user","set","setuser","shutdown","size","smallint","some","space","sql","sqlca","sqlcode","sqlerror","sqlstate","sqlwarning","statistics","substring","sum","system_user","table","tablesample","temp","temporary","textsize","then","ties","time","timestamp","timezone_hour","timezone_minute","to","top","trailing","tran","transaction","translate","translation","trigger","trim","true","truncate","try_convert","tsequal","unbounded","union","unique","unknown","unpivot","update","updatetext","upper","usage","use","user","using","vacuum","value","values","varchar","varying","view","virtual","waitfor","when","whenever","where","while","window","with","within group","without","work","write","writetext","year","zone"],"typeKeywords":[],"operators":["<=",">=","==","!=","===","!==","=>","+","-","**","*","/","%","++","--","<<","</",">>",">>>","&","|","^","!","~","&&","||","??","?",":","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=","@","ALL","AND","ANY","BETWEEN","EXISTS","IN","LIKE","NOT","OR","SOME","EXCEPT","INTERSECT","UNION","APPLY","CROSS","FULL","INNER","JOIN","LEFT","OUTER","RIGHT","CONTAINS","FREETEXT","IS","NULL","PIVOT","UNPIVOT","MATCHED"],"symbols":"/[=><!~?:&|+\\\\-*\\\\/\\\\^%]+/","escapes":"/\\\\\\\\(?:[abfnrtv\\\\\\\\\\"\']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/","digits":"/\\\\d+(_+\\\\d+)*/","octaldigits":"/[0-7]+(_+[0-7]+)*/","binarydigits":"/[0-1]+(_+[0-1]+)*/","hexdigits":"/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/","regexpctl":"/[(){}\\\\[\\\\]\\\\$\\\\^|\\\\-*+?\\\\.]/","regexpesc":"/\\\\\\\\(?:[bBdDfnrstvwWn0\\\\\\\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/","tokenizer":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"builtinFunctions":["AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","SUM","STDEV","STDEVP","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","COLLATE","COLLATIONPROPERTY","TERTIARY_WEIGHTS","FEDERATION_FILTERING_VALUE","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","CURRENT_TIMESTAMP","DATEADD","DATEDIFF","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","CHOOSE","COALESCE","IIF","NULLIF","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASE_PRINCIPAL_ID","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STUFF","SUBSTRING","UNICODE","UPPER","BINARY_CHECKSUM","CHECKSUM","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","ERROR_LINE","ERROR_NUMBER","ERROR_MESSAGE","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GETANSINULL","GET_FILESTREAM_TRANSACTION_CONTEXT","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","XACT_STATE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","CHANGETABLE","CHANGE_TRACKING_CONTEXT","CHANGE_TRACKING_CURRENT_VERSION","CHANGE_TRACKING_IS_COLUMN_IN_MASK","CHANGE_TRACKING_MIN_VALID_VERSION","CONTAINSTABLE","FREETEXTTABLE","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","FILETABLEROOTPATH","GETFILENAMESPACEPATH","GETPATHLOCATOR","PATHNAME","GET_TRANSMISSION_STATUS"],"builtinVariables":["@@DATEFIRST","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","@@CURSOR_ROWS","@@FETCH_STATUS","@@DATEFIRST","@@PROCID","@@ERROR","@@IDENTITY","@@ROWCOUNT","@@TRANCOUNT","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACKET_ERRORS","@@PACK_RECEIVED","@@PACK_SENT","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE"],"pseudoColumns":["$ACTION","$IDENTITY","$ROWGUID","$PARTITION"],"languageId":"flycode","includeLF":false,"ignoreCase":false,"unicode":false,"noThrow":false,"usesEmbedded":false,"stateNames":{"root":[["/[{}]/","delimiter.bracket"],{"include":"common"},{"include":"@comments"},{"include":"@whitespace"},{"include":"@pseudoColumns"},{"include":"@numbers"},{"include":"@strings"},{"include":"@complexIdentifiers"},{"include":"@scopes"},["/[;,.]/","delimiter"],["/[()]/","@brackets"],["/[\\\\w@#$]+/",{"cases":{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],["/[<>=!%&+\\\\-*/|~^]/","operator"]],"common":[["/[a-z_$][\\\\w$]*/",{"cases":{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],["/[A-Z][\\\\w\\\\$]*/","type.identifier"],{"include":"@whitespace"},["/\\\\/(?=([^\\\\\\\\\\\\/]|\\\\\\\\.)+\\\\/([gimsuy]*)(\\\\s*)(\\\\.|;|,|\\\\)|\\\\]|\\\\}|$))/",{"token":"regexp","bracket":"@open","next":"@regexp"}],["/[()\\\\[\\\\]]/","@brackets"],["/[<>](?!@symbols)/","@brackets"],["/!(?=([^=]|$))/","delimiter"],["/@symbols/",{"cases":{"@operators":"delimiter","@default":""}}],["/(@digits)[eE]([\\\\-+]?(@digits))?/","number.float"],["/(@digits)\\\\.(@digits)([eE][\\\\-+]?(@digits))?/","number.float"],["/0[xX](@hexdigits)n?/","number.hex"],["/0[oO]?(@octaldigits)n?/","number.octal"],["/0[bB](@binarydigits)n?/","number.binary"],["/(@digits)n?/","number"],["/[;,.]/","delimiter"],["/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\'([^\'\\\\\\\\]|\\\\\\\\.)*$/","string.invalid"],["/\\"/","string","@string_double"],["/\'/","string","@string_single"],["/`/","string","@string_backtick"]],"whitespace":[["/[ \\\\t\\\\r\\\\n]+/",""],["/\\\\/\\\\*\\\\*(?!\\\\/)/","comment.doc","@jsdoc"],["/\\\\/\\\\*/","comment","@comment"],["/\\\\/\\\\/.*$/","comment"],["/\\\\s+/","white"]],"comment":[["/[^\\\\/*]+/","comment"],["/\\\\*\\\\//","comment","@pop"],["/[\\\\/*]/","comment"],["/[^*/]+/","comment"],["/\\\\*\\\\//",{"token":"comment.quote","next":"@pop"}],["/./","comment"]],"jsdoc":[["/[^\\\\/*]+/","comment.doc"],["/\\\\*\\\\//","comment.doc","@pop"],["/[\\\\/*]/","comment.doc"]],"regexp":[["/(\\\\{)(\\\\d+(?:,\\\\d*)?)(\\\\})/",["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],["/(\\\\[)(\\\\^?)(?=(?:[^\\\\]\\\\\\\\\\\\/]|\\\\\\\\.)+)/",["regexp.escape.control",{"token":"regexp.escape.control","next":"@regexrange"}]],["/(\\\\()(\\\\?:|\\\\?=|\\\\?!)/",["regexp.escape.control","regexp.escape.control"]],["/[()]/","regexp.escape.control"],["/@regexpctl/","regexp.escape.control"],["/[^\\\\\\\\\\\\/]/","regexp"],["/@regexpesc/","regexp.escape"],["/\\\\\\\\\\\\./","regexp.invalid"],["/(\\\\/)([dgimsuy]*)/",[{"token":"regexp","bracket":"@close","next":"@pop"},"keyword.other"]]],"regexrange":[["/-/","regexp.escape.control"],["/\\\\^/","regexp.invalid"],["/@regexpesc/","regexp.escape"],["/[^\\\\]]/","regexp"],["/\\\\]/",{"token":"regexp.escape.control","next":"@pop","bracket":"@close"}]],"string_double":[["/[^\\\\\\\\\\"]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\\"/","string","@pop"]],"string_single":[["/[^\\\\\\\\\']+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/\'/","string","@pop"]],"string_backtick":[["/\\\\$\\\\{/",{"token":"delimiter.bracket","next":"@bracketCounting"}],["/[^\\\\\\\\`$]+/","string"],["/@escapes/","string.escape"],["/\\\\\\\\./","string.escape.invalid"],["/`/","string","@pop"]],"bracketCounting":[["/\\\\{/","delimiter.bracket","@bracketCounting"],["/\\\\}/","delimiter.bracket","@pop"],{"include":"common"}],"comments":[["/--+.*/","comment"],["/\\\\/\\\\*/",{"token":"comment.quote","next":"@comment"}]],"pseudoColumns":[["/[$][A-Za-z_][\\\\w@#$]*/",{"cases":{"@pseudoColumns":"predefined","@default":"identifier"}}]],"numbers":[["/0[xX][0-9a-fA-F]*/","number"],["/[$][+-]*\\\\d*(\\\\.\\\\d*)?/","number"],["/((\\\\d+(\\\\.\\\\d*)?)|(\\\\.\\\\d+))([eE][\\\\-+]?\\\\d+)?/","number"]],"strings":[["/N\'/",{"token":"string","next":"@string"}],["/\'/",{"token":"string","next":"@string"}]],"string":[["/[^\']+/","string"],["/\'\'/","string"],["/\'/",{"token":"string","next":"@pop"}]],"complexIdentifiers":[["/\\\\[/",{"token":"identifier.quote","next":"@bracketedIdentifier"}],["/\\"/",{"token":"identifier.quote","next":"@quotedIdentifier"}]],"bracketedIdentifier":[["/[^\\\\]]+/","identifier"],["/]]/","identifier"],["/]/",{"token":"identifier.quote","next":"@pop"}]],"quotedIdentifier":[["/[^\\"]+/","identifier"],["/\\"\\"/","identifier"],["/\\"/",{"token":"identifier.quote","next":"@pop"}]],"scopes":[["/BEGIN\\\\s+(DISTRIBUTED\\\\s+)?TRAN(SACTION)?\\\\b/i","keyword"],["/BEGIN\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/END\\\\s+TRY\\\\b/i",{"token":"keyword.try"}],["/BEGIN\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/END\\\\s+CATCH\\\\b/i",{"token":"keyword.catch"}],["/(BEGIN|CASE)\\\\b/i",{"token":"keyword.block"}],["/END\\\\b/i",{"token":"keyword.block"}],["/WHEN\\\\b/i",{"token":"keyword.choice"}],["/THEN\\\\b/i",{"token":"keyword.choice"}]]},"brackets":[{"open":"{","close":"}","token":"delimiter.curly"},{"open":"[","close":"]","token":"delimiter.square"},{"open":"(","close":")","token":"delimiter.parenthesis"},{"open":"<","close":">","token":"delimiter.angle"}]}}}';
function parseJson(jsonStr) {
  return JSON.parse(jsonStr, (k, v) => {
    try {
      // 将正则字符串转成正则对象
      if (eval(v) instanceof RegExp) {
        return eval(v);
      }
    } catch (e) {
      // nothing
    }

    return v;
  });
}
function stringifyJson(json) {
  return JSON.stringify(json, (k, v) => {
    // 将正则对象转换为正则字符串
    if (v instanceof RegExp) {
      return v.toString();
    }

    return v;
  });
}
let o = parseJson(n);
let sent = o.sent;
export let MonarchTokensProvider = sent.language;
export let LanguageConfiguration = sent.conf;
// monaco.languages.register({
//   id: "flycode",
// });
const operators = [
  "<=",
  ">=",
  "==",
  "!=",
  "===",
  "!==",
  "=>",
  "+",
  "-",
  "**",
  "*",
  "/",
  "%",
  "++",
  "--",
  "<<",
  "</",
  ">>",
  ">>>",
  "&",
  "|",
  "^",
  "!",
  "~",
  "&&",
  "||",
  "??",
  "?",
  ":",
  "=",
  "+=",
  "-=",
  "*=",
  "**=",
  "/=",
  "%=",
  "<<=",
  ">>=",
  ">>>=",
  "&=",
  "|=",
  "^=",
  "@",
  "ALL",
  "AND",
  "ANY",
  "BETWEEN",
  "EXISTS",
  "IN",
  "LIKE",
  "NOT",
  "OR",
  "SOME",
  "EXCEPT",
  "INTERSECT",
  "UNION",
  "APPLY",
  "CROSS",
  "FULL",
  "INNER",
  "JOIN",
  "LEFT",
  "OUTER",
  "RIGHT",
  "CONTAINS",
  "FREETEXT",
  "IS",
  "NULL",
  "PIVOT",
  "UNPIVOT",
  "MATCHED"
]

// const PropertyRegex = /\.(\w+).(?=\s|[" + operators.join("|") + "])/
const PropertyRegex = /\.(\w+)(?=\s|[" + operators.join("|") + "])/
const PropertyRegexPre = /\w+(?=\.)/;

MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*TODO\b/i, 'comment.fixme'])
MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*FIXME\b/i, 'comment.fixme'])
MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*NOTE\b/i, 'comment.fixme'])
MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*todo\b/i, 'comment.todo'])
MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*fixme\b/i, 'comment.fixme'])
MonarchTokensProvider.tokenizer.root.unshift([/\/\/\s*remind\b/i, 'comment.remind'])
MonarchTokensProvider.tokenizer.root.unshift([PropertyRegex, 'code.property'])
MonarchTokensProvider.tokenizer.root.unshift([PropertyRegexPre, 'code.propertypre'])
MonarchTokensProvider.tokenizer.root.unshift([/FLY\.log/, 'flylog'])
MonarchTokensProvider.tokenizer.root.unshift([/\b(\w+)\(/, 'function'])
export const applyCustomFlycode = (monarchTokensProvider = MonarchTokensProvider, languageConfiguration = LanguageConfiguration) => {
  console.log("apply MonarchTokensProvider and setLanguageConfiguration");
  monaco.languages.setMonarchTokensProvider("flycode", monarchTokensProvider);
  monaco.languages.setLanguageConfiguration("flycode", languageConfiguration);
};
